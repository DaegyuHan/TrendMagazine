"""Add tags table

Revision ID: d6398e85918f
Revises: ac9c4cc37849
Create Date: 2025-03-24 01:00:19.563533

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd6398e85918f'
down_revision: Union[str, None] = 'ac9c4cc37849'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_index(op.f('ix_tags_tag_name'), 'tags', ['tag_name'], unique=True)
    op.create_table('magazines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_image', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag_similarity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_id_1', sa.Integer(), nullable=False),
    sa.Column('tag_id_2', sa.Integer(), nullable=False),
    sa.Column('similarity', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id_1'], ['tags.id'], ),
    sa.ForeignKeyConstraint(['tag_id_2'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_similarity_id'), 'tag_similarity', ['id'], unique=False)
    op.create_index(op.f('ix_tag_similarity_tag_id_1'), 'tag_similarity', ['tag_id_1'], unique=False)
    op.create_index(op.f('ix_tag_similarity_tag_id_2'), 'tag_similarity', ['tag_id_2'], unique=False)
    op.create_table('articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('main_category', sa.String(length=30), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('magazine_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['magazine_id'], ['magazines.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('article_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('relevance', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_article_tags_article_id'), 'article_tags', ['article_id'], unique=False)
    op.create_index(op.f('ix_article_tags_id'), 'article_tags', ['id'], unique=False)
    op.create_index(op.f('ix_article_tags_tag_id'), 'article_tags', ['tag_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('article',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('main_category', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('magazine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['magazine_id'], ['magazine.id'], name='article_magazine_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='article_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='article_pkey')
    )
    op.create_table('magazine',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('profile_image', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='magazine_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='magazine_pkey')
    )
    op.drop_index(op.f('ix_article_tags_tag_id'), table_name='article_tags')
    op.drop_index(op.f('ix_article_tags_id'), table_name='article_tags')
    op.drop_index(op.f('ix_article_tags_article_id'), table_name='article_tags')
    op.drop_table('article_tags')
    op.drop_table('articles')
    op.drop_index(op.f('ix_tag_similarity_tag_id_2'), table_name='tag_similarity')
    op.drop_index(op.f('ix_tag_similarity_tag_id_1'), table_name='tag_similarity')
    op.drop_index(op.f('ix_tag_similarity_id'), table_name='tag_similarity')
    op.drop_table('tag_similarity')
    op.drop_table('magazines')
    op.drop_index(op.f('ix_tags_tag_name'), table_name='tags')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_table('tags')
    # ### end Alembic commands ###
